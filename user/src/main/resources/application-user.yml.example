spring:
  application:
    name: user
  datasource:
    url: jdbc:postgresql://13.209.127.192:5433/learning_user_db
    username: learning_user
    password: learning1234
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: MY_CLIENT_ID_GOOGLE
            client-secret: MY_CLIENT_SECRET_GOOGLE
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"

          naver:
            client-id: MY_CLIENT_ID_NAVER
            client-secret: MY_CLIENT_SECRET_NAVER
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: name, email, nickname
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            client-name: Naver

          kakao:
            client-id: MY_CLIENT_ID_KAKAO
            client-secret: MY_CLIENT_SECRET_KAKAO
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-name: Kakao

        provider: #spring security oauth2 client 라이브러리가 google provider 정보를 내장하고 있음.
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정
            #https://developers.naver.com/docs/login/profile/profile.md

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # 인가 코드 받기 uri (GET)
            token-uri: https://kauth.kakao.com/oauth/token # redirect uri 로 받은 인가 코드를 기반으로 토큰 요청 (POST)
            user-info-uri: https://kapi.kakao.com/v2/user/me # 사용자 정보 가져오기 - 회원가입 여부 확인에 활용 (GET / POST)
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정
            #https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#req-user-info
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher